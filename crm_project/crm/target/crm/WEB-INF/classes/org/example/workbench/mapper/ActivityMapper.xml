<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >

<mapper namespace="org.example.workbench.mapper.ActivityMapper" >

  <resultMap id="BaseResultMap" type="org.example.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
    -->
    <id column="id" property="id" jdbcType="CHAR" />
    <result column="owner" property="owner" jdbcType="CHAR" />
    <result column="name" property="name" jdbcType="VARCHAR" />
    <result column="start_date" property="startDate" jdbcType="CHAR" />
    <result column="end_date" property="endDate" jdbcType="CHAR" />
    <result column="cost" property="cost" jdbcType="VARCHAR" />
    <result column="description" property="description" jdbcType="VARCHAR" />
    <result column="create_time" property="createTime" jdbcType="CHAR" />
    <result column="create_by" property="createBy" jdbcType="VARCHAR" />
    <result column="edit_time" property="editTime" jdbcType="CHAR" />
    <result column="edit_by" property="editBy" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
    -->
    id, owner, name, start_date, end_date, cost, description, create_time, create_by, 
    edit_time, edit_by
  </sql>

  <insert id="insertSelective" parameterType="org.example.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
    -->
    insert into tbl_activity
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="owner != null" >
        owner,
      </if>
      <if test="name != null" >
        name,
      </if>
      <if test="startDate != null" >
        start_date,
      </if>
      <if test="endDate != null" >
        end_date,
      </if>
      <if test="cost != null" >
        cost,
      </if>
      <if test="description != null" >
        description,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="createBy != null" >
        create_by,
      </if>
      <if test="editTime != null" >
        edit_time,
      </if>
      <if test="editBy != null" >
        edit_by,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=CHAR},
      </if>
      <if test="owner != null" >
        #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        #{editBy,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="org.example.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
    -->
    update tbl_activity
    <set >
      <if test="owner != null" >
        owner = #{owner,jdbcType=CHAR},
      </if>
      <if test="name != null" >
        name = #{name,jdbcType=VARCHAR},
      </if>
      <if test="startDate != null" >
        start_date = #{startDate,jdbcType=CHAR},
      </if>
      <if test="endDate != null" >
        end_date = #{endDate,jdbcType=CHAR},
      </if>
      <if test="cost != null" >
        cost = #{cost,jdbcType=VARCHAR},
      </if>
      <if test="description != null" >
        description = #{description,jdbcType=VARCHAR},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=CHAR},
      </if>
      <if test="createBy != null" >
        create_by = #{createBy,jdbcType=VARCHAR},
      </if>
      <if test="editTime != null" >
        edit_time = #{editTime,jdbcType=CHAR},
      </if>
      <if test="editBy != null" >
        edit_by = #{editBy,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=CHAR}
  </update>
  <update id="updateByPrimaryKey" parameterType="org.example.workbench.domain.Activity" >
    <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
    -->
    update tbl_activity
    set owner = #{owner,jdbcType=CHAR},
      name = #{name,jdbcType=VARCHAR},
      start_date = #{startDate,jdbcType=CHAR},
      end_date = #{endDate,jdbcType=CHAR},
      cost = #{cost,jdbcType=VARCHAR},
      description = #{description,jdbcType=VARCHAR},
      create_time = #{createTime,jdbcType=CHAR},
      create_by = #{createBy,jdbcType=VARCHAR},
      edit_time = #{editTime,jdbcType=CHAR},
      edit_by = #{editBy,jdbcType=VARCHAR}
    where id = #{id,jdbcType=CHAR}
  </update>

<!--***********************************************************************************************************************************-->
  <!--
      WARNING - @mbggenerated
      This element is automatically generated by MyBatis Generator, do not modify.
      This element was generated on Tue May 17 10:04:55 CST 2022.
      int insertActivity(Activity activity); 保存创建的市场活动
    -->
  <insert id="insertActivity" parameterType="org.example.workbench.domain.Activity" >
    insert into tbl_activity (id, owner, name, start_date,
      end_date, cost, description,
      create_time, create_by)
    values (#{id,jdbcType=CHAR}, #{owner,jdbcType=CHAR}, #{name,jdbcType=VARCHAR}, #{startDate,jdbcType=CHAR},
      #{endDate,jdbcType=CHAR}, #{cost,jdbcType=VARCHAR}, #{description,jdbcType=VARCHAR},
      #{createTime,jdbcType=CHAR}, #{createBy,jdbcType=VARCHAR})
  </insert>
  <!--
      List<Activity> selectActivityByConditionForPage(Map<String,Object> map);
      分页查询
     -->
  <select id="selectActivityByConditionForPage" parameterType="map" resultMap="BaseResultMap">
    select a.id,u1.name as owner,a.name,a.start_date,a.end_date,a.cost,a.description,a.create_time,
           u2.name as create_by,a.edit_time,u3.name as edit_by
    from tbl_activity a
    join tbl_user u1 on a.owner = u1.id
    join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
    <where>
      <if test="name !=null and name !=''">
        and a.name like '%' #{name} '%'
      </if>
      <if test="owner != null and owner !=''" >
        and u1.name like '%' #{owner} '%'
      </if>
      <if test="startDate !=null and startDate !=''">
        and a.start_date>=#{startDate}
      </if>
      <if test="endDate !=null and endDate !=''">
        and a.end_date&lt;=#{endDate}
      </if>
    </where>
    order by a.create_time desc
    limit #{beginNo},#{pageSize}
  </select>
  <!--
      int selectCountOfActivityByCondition(Map<String,Object> map);
      查询总条数
  -->
  <select id="selectCountOfActivityByCondition" parameterType="map" resultType="int">
    select count(*)
    from tbl_activity a
    join tbl_user u1 on a.owner = u1.id
    join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
    <where>
      <if test="name !=null and name !=''">
        and a.name like '%' #{name} '%'
      </if>
      <if test="owner != null and owner !=''" >
        and u1.name like '%' #{owner} '%'
      </if>
      <if test="startDate !=null and startDate !=''">
        and a.start_date>=#{startdate}
      </if>
      <if test="endDate !=null and endDate !=''">
        and a.end_date&lt;=#{enddate}
      </if>
    </where>
  </select>
  <!--
    //根据id 删除市场活动
    int deleteActivityByIds(String ids);-->
  <delete id="deleteActivityByIds" parameterType="string">
    delete from tbl_activity where id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </delete>
  <!--
      根据id查询市场活动
       Activity selectActivityById(String id);
     -->
  <select id="selectActivityById" resultMap="BaseResultMap" parameterType="string" >
    select <include refid="Base_Column_List" />
    from tbl_activity
    where id = #{id}
  </select>
  <!--
      /**
       * 保存更新数据
       */
    int updateActivity(Activity activity);
  -->
  <update id="updateActivity" parameterType="activity">
    update tbl_activity
       set owner=#{owner},name=#{name},start_date=#{startDate},end_date=#{endDate},cost=#{cost},description=#{description},
           edit_time=#{editTime},edit_by=#{editBy}
      where id=#{id}
  </update>
  <!--
    /**
     * 查询所有的市场活动，文件下载
     */
    List<Activity> selectAllActivities();
  -->
  <select id="selectAllActivities" resultMap="BaseResultMap">
    select a.id,u1.name as owner,a.name,a.start_date,a.end_date,a.cost,a.description,a.create_time,
           u2.name as create_by,a.edit_time,u3.name as edit_by
    from tbl_activity a
    join tbl_user u1 on a.owner = u1.id
    join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
  </select>
  <!--
    /**
     * 根据id选择导出市场活动
     */
    List<Activity> selectOptionActivityById(String[] ids);
  -->
  <select id="selectOptionActivityById" parameterType="string" resultMap="BaseResultMap">
     select a.id,u1.name as owner,a.name,a.start_date,a.end_date,a.cost,a.description,a.create_time,
           u2.name as create_by,a.edit_time,u3.name as edit_by
    from tbl_activity a
    join tbl_user u1 on a.owner = u1.id
    join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
    order by a.create_time desc
    where a.id in
    <foreach collection="array" item="id" separator="," open="(" close=")">
      #{id}
    </foreach>
  </select>
<!--
    /**
     * 导入市场活动
     */
    int insertActivityByList(List<Activity> activityList);
-->
  <insert id="insertActivityByList" parameterType="activity">
    insert into tbl_activity (id, owner, name, start_date, end_date, cost, description, create_time, create_by)
    values
    <foreach collection="list" item="obj" separator=",">
      (#{obj.id},#{obj.owner},#{obj.name},#{obj.startDate},#{obj.endDate},#{obj.cost},#{obj.description},#{obj.createTime},#{obj.createBy})
    </foreach>
  </insert>
  <!--
    /**
     *  根据id查询市场活动明细
     */
    Activity selectActivityForDetailById(String id);
  -->
  <select id="selectActivityForDetailById" parameterType="string" resultMap="BaseResultMap">
    select a.id,u1.name as owner,a.name,a.start_date,a.end_date,a.cost,a.description,a.create_time,
    u2.name as create_by,a.edit_time,u3.name as edit_by
    from tbl_activity a
    join tbl_user u1 on a.owner = u1.id
    join tbl_user u2 on a.create_by = u2.id
    left join tbl_user u3 on a.edit_by = u3.id
    where a.id = #{id}
  </select>
  <!--/**
     * 根据clueId查询关联的市场活动明细
     */
    List<Activity> selectActivityForDetailByClueId(String clueId);-->
  <select id="selectActivityForDetailByClueId" parameterType="string" resultMap="BaseResultMap">
    select a.id,u.name as owner,a.start_date,a.end_date,a.name
    from tbl_activity a
    join tbl_user u on a.owner = u.id
    join tbl_clue_activity_relation ac on a.id = ac.activity_id
    where ac.clue_id = #{clueId}
  </select>
  <!--
     根据clueId和activityName查询市场活动
     把已经关联过的排除
     List<Activity> selectActivityForDetailNyActivityNameAndClueId(Map<String,Object> map);-->
  <select id="selectActivityForDetailNyActivityNameAndClueId" parameterType="map" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as owner
    from tbl_activity a
    join tbl_user u on a.owner=u.id
    where a.name like '%' #{activityName} '%' and a.id not in (
         select activity_id
         from tbl_clue_activity_relation
         where clue_id=#{clueId}
    )
  </select>
  <!--
     根据clueId和activityId查询市场活动
     刷新线索关联市场活动后的部分
    List<Activity> selectActivityForDetailByIds(String[] ids);-->
  <select id="selectActivityForDetailByIds" parameterType="string" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as owner
    from tbl_activity a
    join tbl_user u on a.owner=u.id
    where a.id in
        <foreach collection="array" separator="," open="(" item="id" close=")">
          #{id}
        </foreach>
  </select>
  <!--List<Activity> selectActivityForDetailByIds(String[] ids);
    /**
     *  根据clueId和activityName查询市场活动
     *  关联市场活动页面
     *  只显示已经关联过的
     */
    List<Activity> selectActivityForConvertNyActivityNameAndClueId(Map<String,Object> map);-->
  <select id="selectActivityForConvertNyActivityNameAndClueId" parameterType="map" resultMap="BaseResultMap">
    select a.id,a.name,a.start_date,a.end_date,u.name as owner
    from tbl_activity a
    join tbl_user u on a.owner=u.id
    where a.name like '%' #{activityName} '%' and a.id in (
         select activity_id
         from tbl_clue_activity_relation
         where clue_id=#{clueId}
    )
  </select>
</mapper>